<?php
// form.php
// Một file PHP đơn: hiển thị form (GET) và xử lý dữ liệu (POST).
// Lưu ý: chạy trên web server có PHP (Apache/XAMPP/Laragon hoặc php -S localhost:8000)

// Hàm tiện ích để lấy giá trị POST an toàn (trả về giá mặc định nếu không có)
function old($name, $default = '') {
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        if (isset($_POST[$name])) {
            // với checkbox hobby có thể là mảng
            return is_array($_POST[$name]) ? $_POST[$name] : trim($_POST[$name]);
        }
    }
    return $default;
}

// Xử lý khi form được gửi (POST)
$errors = [];
$result = null;
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Lấy dữ liệu an toàn
    $username = isset($_POST['username']) ? trim($_POST['username']) : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';
    $age = isset($_POST['age']) ? (int)$_POST['age'] : 0;
    $hobby = isset($_POST['hobby']) ? $_POST['hobby'] : []; // mảng
    $country = isset($_POST['country']) ? trim($_POST['country']) : '';

    // validate server-side (một vài kiểm tra cơ bản)
    if ($username === '') $errors[] = "Username không được để trống.";
    if (strlen($password) < 6) $errors[] = "Password phải có ít nhất 6 kí tự.";
    if ($age < 0 || $age > 100) $errors[] = "Age phải trong khoảng 0-100.";
    if (!in_array($country, ['Viet Nam', 'Hoa Ky', 'Trung Quoc'])) $errors[] = "Country không hợp lệ.";
    // hobby là optional

    if (empty($errors)) {
        // Xử lý (ở đây ta chỉ hiển thị lại thông tin đã submit)
        // Thực tế có thể lưu vào DB hoặc gửi email...
        $result = [
            'username' => htmlspecialchars($username, ENT_QUOTES, 'UTF-8'),
            'password_mask' => str_repeat('*', min(20, strlen($password))),
            'age' => $age,
            'hobby' => array_map(function($h){ return htmlspecialchars($h, ENT_QUOTES, 'UTF-8'); }, (array)$hobby),
            'country' => htmlspecialchars($country, ENT_QUOTES, 'UTF-8'),
        ];
        // Nếu muốn: có thể redirect to avoid resubmit (not required)
    }
}
?>
<!doctype html>
<html lang="vi">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>Form bài tập (1 file PHP, JS xử lý)</title>
<style>
    body{font-family: Arial, Helvetica, sans-serif; background:#f7f9fc; padding:24px;}
    .card{background:#fff;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.08);max-width:760px;margin:0 auto;padding:20px;}
    label{display:block;margin-top:12px;font-weight:600}
    input[type="text"], input[type="password"], select{width:100%;padding:8px;border:1px solid #ccc;border-radius:4px}
    .row{display:flex;gap:12px;align-items:center}
    .controls{margin-top:16px;display:flex;gap:12px}
    .btn{padding:8px 14px;border-radius:6px;border:0;cursor:pointer}
    .btn-primary{background:#1976d2;color:white}
    .btn-secondary{background:#e0e0e0}
    .hint{font-size:13px;color:#666;margin-top:6px}
    .error{background:#ffe6e6;border:1px solid #ffbcbc;color:#7a0000;padding:8px;border-radius:4px}
    .result{background:#eef9ee;border:1px solid #bfe2bf;color:#0b5a15;padding:12px;border-radius:4px}
    .hobby-list{display:flex;flex-direction:column;margin-top:8px}
    .age-wrap{display:flex;align-items:center;gap:12px;margin-top:8px}
    .small{font-size:13px;color:#555}
</style>
</head>
<body>
<div class="card">
    <h2>Đăng ký / Demo Form</h2>

    <?php if (!empty($errors)): ?>
        <div class="error">
            <strong>Có lỗi:</strong>
            <ul>
                <?php foreach ($errors as $e): ?>
                    <li><?= htmlspecialchars($e, ENT_QUOTES, 'UTF-8') ?></li>
                <?php endforeach; ?>
            </ul>
        </div>
    <?php endif; ?>

    <?php if ($result): ?>
        <div class="result" id="result-box">
            <strong>Kết quả đã gửi:</strong>
            <p>Username: <?= $result['username'] ?></p>
            <p>Password (masked): <?= $result['password_mask'] ?></p>
            <p>Age: <?= $result['age'] ?></p>
            <p>Hobby: <?= (empty($result['hobby']) ? 'Không chọn' : implode(', ', $result['hobby'])) ?></p>
            <p>Country: <?= $result['country'] ?></p>
            <p class="small">Nếu muốn gửi lại khác, ấn "Clear" để đặt lại form.</p>
        </div>
    <?php endif; ?>

    <!-- Form gửi về cùng 1 file (action bỏ trống) -->
    <form id="demoForm" method="post" novalidate>
        <label for="username">Username</label>
        <input id="username" name="username" type="text" placeholder="Nhập username"
               value="<?= htmlspecialchars(old('username', isset($username) ? $username : ''), ENT_QUOTES, 'UTF-8') ?>">

        <label for="password">Password</label>
        <input id="password" name="password" type="password" placeholder="Mật khẩu (≥6 ký tự)">

        <label for="age">Age <span id="ageValue" class="small">55</span></label>
        <div class="age-wrap">
            <input id="age" name="age" type="range" min="0" max="100" value="<?= htmlspecialchars(old('age', isset($age) ? $age : 55), ENT_QUOTES, 'UTF-8') ?>">
            <div class="small">0 --- 100</div>
        </div>

        <label>Hobby</label>
        <div class="hobby-list">
            <?php
                $hobbies_from_post = old('hobby', []);
                if (!is_array($hobbies_from_post)) $hobbies_from_post = [$hobbies_from_post];
                $hobby_options = ['The thao' => 'Thể thao', 'Am nhac' => 'Âm nhạc', 'Nghe thuat' => 'Nghệ thuật'];
            ?>
            <?php foreach ($hobby_options as $val => $label): ?>
                <label><input type="checkbox" name="hobby[]" value="<?= htmlspecialchars($label, ENT_QUOTES, 'UTF-8') ?>"
                    <?php if (in_array($label, (array)$hobbies_from_post)) echo 'checked'; ?>> <?= $label ?></label>
            <?php endforeach; ?>
        </div>

        <label for="country">Country</label>
        <select id="country" name="country">
            <?php
                $oldCountry = old('country', isset($country) ? $country : '');
                $countries = [
                    'Viet Nam' => 'Việt Nam',
                    'Hoa Ky' => 'Hoa Kỳ',
                    'Trung Quoc' => 'Trung Quốc'
                ];
                foreach ($countries as $k => $lab) {
                    $sel = ($oldCountry === $k) ? 'selected' : '';
                    echo "<option value=\"" . htmlspecialchars($k, ENT_QUOTES, 'UTF-8') . "\" $sel>$lab</option>";
                }
            ?>
        </select>

        <div class="controls">
            <button type="submit" class="btn btn-primary" id="submitBtn">Submit</button>
            <button type="button" class="btn btn-secondary" id="cancelBtn">Cancel</button>
            <div class="hint">Cancel: xóa sạch form. Submit: gửi form về server để xử lý.</div>
        </div>
    </form>
</div>

<script>
// Tất cả thao tác client-side bằng JavaScript

document.addEventListener('DOMContentLoaded', function() {
    const ageInput = document.getElementById('age');
    const ageValue = document.getElementById('ageValue');
    const cancelBtn = document.getElementById('cancelBtn');
    const demoForm = document.getElementById('demoForm');
    const submitBtn = document.getElementById('submitBtn');

    // Hiển thị giá trị slider ngay lập tức
    function updateAgeLabel() {
        ageValue.textContent = ageInput.value;
    }
    ageInput.addEventListener('input', updateAgeLabel);
    updateAgeLabel();

    // Cancel: xóa form (đặt về mặc định)
    cancelBtn.addEventListener('click', function() {
        // reset form
        demoForm.reset();
        // cập nhật label age sau reset
        updateAgeLabel();
        // nếu có box result hiện lên thì cuộn về form
        const resultBox = document.getElementById('result-box');
        if (resultBox) {
            resultBox.scrollIntoView({behavior: 'smooth'});
        }
    });

    // Client-side validation cơ bản trước submit
    demoForm.addEventListener('submit', function(e) {
        // Clear previous small warnings (nếu muốn)
        const username = document.getElementById('username').value.trim();
        const password = document.getElementById('password').value;

        let msgs = [];
        if (username === '') msgs.push('Username không được để trống.');
        if (password.length < 6) msgs.push('Password phải có ít nhất 6 ký tự.');

        if (msgs.length) {
            // chặn submit và hiển thị alert đơn giản (có thể thay bằng UI đẹp hơn)
            e.preventDefault();
            alert('Lỗi:\n' + msgs.join('\n'));
            return false;
        }

        // Có thể thêm thao tác khác ở client trước khi gửi (ví dụ disable button để tránh double submit)
        submitBtn.disabled = true;
        submitBtn.textContent = 'Đang gửi...';
        // form sẽ submit về server (POST) và server sẽ trả về trang có kết quả
    });
});
</script>
</body>
</html>
